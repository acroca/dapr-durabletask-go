// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v5.29.3
// source: backend_service.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request payload for adding new orchestration events.
type AddEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the orchestration to send an event to.
	Instance *OrchestrationInstance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	// The event to send to the orchestration.
	Event *HistoryEvent `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *AddEventRequest) Reset() {
	*x = AddEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEventRequest) ProtoMessage() {}

func (x *AddEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEventRequest.ProtoReflect.Descriptor instead.
func (*AddEventRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddEventRequest) GetInstance() *OrchestrationInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *AddEventRequest) GetEvent() *HistoryEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

// Response payload for adding new orchestration events.
type AddEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddEventResponse) Reset() {
	*x = AddEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEventResponse) ProtoMessage() {}

func (x *AddEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEventResponse.ProtoReflect.Descriptor instead.
func (*AddEventResponse) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{1}
}

// Request payload for waiting for instance completion.
type WaitForInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId          string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	GetInputsAndOutputs bool   `protobuf:"varint,2,opt,name=getInputsAndOutputs,proto3" json:"getInputsAndOutputs,omitempty"`
}

func (x *WaitForInstanceRequest) Reset() {
	*x = WaitForInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForInstanceRequest) ProtoMessage() {}

func (x *WaitForInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForInstanceRequest.ProtoReflect.Descriptor instead.
func (*WaitForInstanceRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{2}
}

func (x *WaitForInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *WaitForInstanceRequest) GetGetInputsAndOutputs() bool {
	if x != nil {
		return x.GetInputsAndOutputs
	}
	return false
}

// Response payload for waiting for instance completion.
type WaitForInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists             bool                `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	OrchestrationState *OrchestrationState `protobuf:"bytes,2,opt,name=orchestrationState,proto3" json:"orchestrationState,omitempty"`
}

func (x *WaitForInstanceResponse) Reset() {
	*x = WaitForInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForInstanceResponse) ProtoMessage() {}

func (x *WaitForInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForInstanceResponse.ProtoReflect.Descriptor instead.
func (*WaitForInstanceResponse) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{3}
}

func (x *WaitForInstanceResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *WaitForInstanceResponse) GetOrchestrationState() *OrchestrationState {
	if x != nil {
		return x.OrchestrationState
	}
	return nil
}

// Request parameters for fetching orchestration runtime state.
type GetOrchestrationRuntimeStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the target orchestration instance.
	Instance *OrchestrationInstance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *GetOrchestrationRuntimeStateRequest) Reset() {
	*x = GetOrchestrationRuntimeStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrchestrationRuntimeStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrchestrationRuntimeStateRequest) ProtoMessage() {}

func (x *GetOrchestrationRuntimeStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrchestrationRuntimeStateRequest.ProtoReflect.Descriptor instead.
func (*GetOrchestrationRuntimeStateRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetOrchestrationRuntimeStateRequest) GetInstance() *OrchestrationInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

// Response payload returned when fetching orchestration runtime state.
type GetOrchestrationRuntimeStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The existing history events for the target orchestration instance.
	History []*HistoryEvent `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
}

func (x *GetOrchestrationRuntimeStateResponse) Reset() {
	*x = GetOrchestrationRuntimeStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrchestrationRuntimeStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrchestrationRuntimeStateResponse) ProtoMessage() {}

func (x *GetOrchestrationRuntimeStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrchestrationRuntimeStateResponse.ProtoReflect.Descriptor instead.
func (*GetOrchestrationRuntimeStateResponse) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetOrchestrationRuntimeStateResponse) GetHistory() []*HistoryEvent {
	if x != nil {
		return x.History
	}
	return nil
}

// Request payload for completing an activity work item.
type CompleteActivityWorkItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The completion token that was provided when the work item was fetched.
	CompletionToken string `protobuf:"bytes,1,opt,name=completionToken,proto3" json:"completionToken,omitempty"`
	// The response event that will be sent to the orchestrator.
	// This must be either a TaskCompleted event or a TaskFailed event.
	ResponseEvent *HistoryEvent `protobuf:"bytes,2,opt,name=responseEvent,proto3" json:"responseEvent,omitempty"`
}

func (x *CompleteActivityWorkItemRequest) Reset() {
	*x = CompleteActivityWorkItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteActivityWorkItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteActivityWorkItemRequest) ProtoMessage() {}

func (x *CompleteActivityWorkItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteActivityWorkItemRequest.ProtoReflect.Descriptor instead.
func (*CompleteActivityWorkItemRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{6}
}

func (x *CompleteActivityWorkItemRequest) GetCompletionToken() string {
	if x != nil {
		return x.CompletionToken
	}
	return ""
}

func (x *CompleteActivityWorkItemRequest) GetResponseEvent() *HistoryEvent {
	if x != nil {
		return x.ResponseEvent
	}
	return nil
}

// Response payload for completing an activity work item.
type CompleteActivityWorkItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompleteActivityWorkItemResponse) Reset() {
	*x = CompleteActivityWorkItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteActivityWorkItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteActivityWorkItemResponse) ProtoMessage() {}

func (x *CompleteActivityWorkItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteActivityWorkItemResponse.ProtoReflect.Descriptor instead.
func (*CompleteActivityWorkItemResponse) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{7}
}

// Request payload for abandoning an activity work item.
type AbandonActivityWorkItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The completion token that was provided when the work item was fetched.
	CompletionToken string `protobuf:"bytes,1,opt,name=completionToken,proto3" json:"completionToken,omitempty"`
}

func (x *AbandonActivityWorkItemRequest) Reset() {
	*x = AbandonActivityWorkItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonActivityWorkItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonActivityWorkItemRequest) ProtoMessage() {}

func (x *AbandonActivityWorkItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonActivityWorkItemRequest.ProtoReflect.Descriptor instead.
func (*AbandonActivityWorkItemRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{8}
}

func (x *AbandonActivityWorkItemRequest) GetCompletionToken() string {
	if x != nil {
		return x.CompletionToken
	}
	return ""
}

// Response payload for abandoning an activity work item.
type AbandonActivityWorkItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AbandonActivityWorkItemResponse) Reset() {
	*x = AbandonActivityWorkItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonActivityWorkItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonActivityWorkItemResponse) ProtoMessage() {}

func (x *AbandonActivityWorkItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonActivityWorkItemResponse.ProtoReflect.Descriptor instead.
func (*AbandonActivityWorkItemResponse) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{9}
}

// Request payload for completing an orchestration work item.
type CompleteOrchestrationWorkItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The completion token that was provided when the work item was fetched.
	CompletionToken string                  `protobuf:"bytes,1,opt,name=completionToken,proto3" json:"completionToken,omitempty"`
	Instance        *OrchestrationInstance  `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	RuntimeStatus   OrchestrationStatus     `protobuf:"varint,3,opt,name=runtimeStatus,proto3,enum=OrchestrationStatus" json:"runtimeStatus,omitempty"`
	CustomStatus    *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=customStatus,proto3" json:"customStatus,omitempty"`
	NewHistory      []*HistoryEvent         `protobuf:"bytes,5,rep,name=newHistory,proto3" json:"newHistory,omitempty"`
	NewTasks        []*HistoryEvent         `protobuf:"bytes,6,rep,name=newTasks,proto3" json:"newTasks,omitempty"`
	NewTimers       []*HistoryEvent         `protobuf:"bytes,7,rep,name=newTimers,proto3" json:"newTimers,omitempty"`
	NewMessages     []*OrchestratorMessage  `protobuf:"bytes,8,rep,name=newMessages,proto3" json:"newMessages,omitempty"`
	// The number of work item events that were processed by the orchestrator.
	// This field is optional. If not set, the service should assume that the orchestrator processed all events.
	NumEventsProcessed *wrapperspb.Int32Value `protobuf:"bytes,9,opt,name=numEventsProcessed,proto3" json:"numEventsProcessed,omitempty"`
}

func (x *CompleteOrchestrationWorkItemRequest) Reset() {
	*x = CompleteOrchestrationWorkItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteOrchestrationWorkItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteOrchestrationWorkItemRequest) ProtoMessage() {}

func (x *CompleteOrchestrationWorkItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteOrchestrationWorkItemRequest.ProtoReflect.Descriptor instead.
func (*CompleteOrchestrationWorkItemRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{10}
}

func (x *CompleteOrchestrationWorkItemRequest) GetCompletionToken() string {
	if x != nil {
		return x.CompletionToken
	}
	return ""
}

func (x *CompleteOrchestrationWorkItemRequest) GetInstance() *OrchestrationInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *CompleteOrchestrationWorkItemRequest) GetRuntimeStatus() OrchestrationStatus {
	if x != nil {
		return x.RuntimeStatus
	}
	return OrchestrationStatus_ORCHESTRATION_STATUS_RUNNING
}

func (x *CompleteOrchestrationWorkItemRequest) GetCustomStatus() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomStatus
	}
	return nil
}

func (x *CompleteOrchestrationWorkItemRequest) GetNewHistory() []*HistoryEvent {
	if x != nil {
		return x.NewHistory
	}
	return nil
}

func (x *CompleteOrchestrationWorkItemRequest) GetNewTasks() []*HistoryEvent {
	if x != nil {
		return x.NewTasks
	}
	return nil
}

func (x *CompleteOrchestrationWorkItemRequest) GetNewTimers() []*HistoryEvent {
	if x != nil {
		return x.NewTimers
	}
	return nil
}

func (x *CompleteOrchestrationWorkItemRequest) GetNewMessages() []*OrchestratorMessage {
	if x != nil {
		return x.NewMessages
	}
	return nil
}

func (x *CompleteOrchestrationWorkItemRequest) GetNumEventsProcessed() *wrapperspb.Int32Value {
	if x != nil {
		return x.NumEventsProcessed
	}
	return nil
}

// Response payload for completing an orchestration work item.
type CompleteOrchestrationWorkItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompleteOrchestrationWorkItemResponse) Reset() {
	*x = CompleteOrchestrationWorkItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteOrchestrationWorkItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteOrchestrationWorkItemResponse) ProtoMessage() {}

func (x *CompleteOrchestrationWorkItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteOrchestrationWorkItemResponse.ProtoReflect.Descriptor instead.
func (*CompleteOrchestrationWorkItemResponse) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{11}
}

// A message to be delivered to an orchestration by the backend.
type OrchestratorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the orchestration instance to receive the message.
	Instance *OrchestrationInstance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	// The event payload to be received by the target orchestration.
	Event *HistoryEvent `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *OrchestratorMessage) Reset() {
	*x = OrchestratorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrchestratorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorMessage) ProtoMessage() {}

func (x *OrchestratorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorMessage.ProtoReflect.Descriptor instead.
func (*OrchestratorMessage) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{12}
}

func (x *OrchestratorMessage) GetInstance() *OrchestrationInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *OrchestratorMessage) GetEvent() *HistoryEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

// Request payload for abandoning an orchestration work item.
type AbandonOrchestrationWorkItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The completion token that was provided when the work item was fetched.
	CompletionToken string `protobuf:"bytes,1,opt,name=completionToken,proto3" json:"completionToken,omitempty"`
}

func (x *AbandonOrchestrationWorkItemRequest) Reset() {
	*x = AbandonOrchestrationWorkItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonOrchestrationWorkItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonOrchestrationWorkItemRequest) ProtoMessage() {}

func (x *AbandonOrchestrationWorkItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonOrchestrationWorkItemRequest.ProtoReflect.Descriptor instead.
func (*AbandonOrchestrationWorkItemRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{13}
}

func (x *AbandonOrchestrationWorkItemRequest) GetCompletionToken() string {
	if x != nil {
		return x.CompletionToken
	}
	return ""
}

// Response payload for abandoning an orchestration work item.
type AbandonOrchestrationWorkItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AbandonOrchestrationWorkItemResponse) Reset() {
	*x = AbandonOrchestrationWorkItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonOrchestrationWorkItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonOrchestrationWorkItemResponse) ProtoMessage() {}

func (x *AbandonOrchestrationWorkItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonOrchestrationWorkItemResponse.ProtoReflect.Descriptor instead.
func (*AbandonOrchestrationWorkItemResponse) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{14}
}

// Request payload for completing an entity work item.
type CompleteEntityWorkItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The completion token that was provided when the work item was fetched.
	CompletionToken string `protobuf:"bytes,1,opt,name=completionToken,proto3" json:"completionToken,omitempty"`
	// The execution id of the scheduler.
	ExecutionId string `protobuf:"bytes,2,opt,name=executionId,proto3" json:"executionId,omitempty"`
	// The number of requests that were executed.
	// If this is smaller than the number of operations in the work item,
	// any left-over operations will be sent again with the next work item.
	NumberOperationsExecuted int32 `protobuf:"varint,3,opt,name=numberOperationsExecuted,proto3" json:"numberOperationsExecuted,omitempty"`
	// The state of the entity after the executed operations, or null if none
	EntityState *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=entityState,proto3" json:"entityState,omitempty"`
	// The messages that were sent by the executed operations. This must
	// include any responses to the operation calls.
	Messages []*OrchestratorMessage `protobuf:"bytes,5,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *CompleteEntityWorkItemRequest) Reset() {
	*x = CompleteEntityWorkItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteEntityWorkItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteEntityWorkItemRequest) ProtoMessage() {}

func (x *CompleteEntityWorkItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteEntityWorkItemRequest.ProtoReflect.Descriptor instead.
func (*CompleteEntityWorkItemRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{15}
}

func (x *CompleteEntityWorkItemRequest) GetCompletionToken() string {
	if x != nil {
		return x.CompletionToken
	}
	return ""
}

func (x *CompleteEntityWorkItemRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *CompleteEntityWorkItemRequest) GetNumberOperationsExecuted() int32 {
	if x != nil {
		return x.NumberOperationsExecuted
	}
	return 0
}

func (x *CompleteEntityWorkItemRequest) GetEntityState() *wrapperspb.StringValue {
	if x != nil {
		return x.EntityState
	}
	return nil
}

func (x *CompleteEntityWorkItemRequest) GetMessages() []*OrchestratorMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

// Response payload for completing an entity work item.
type CompleteEntityWorkItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompleteEntityWorkItemResponse) Reset() {
	*x = CompleteEntityWorkItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteEntityWorkItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteEntityWorkItemResponse) ProtoMessage() {}

func (x *CompleteEntityWorkItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteEntityWorkItemResponse.ProtoReflect.Descriptor instead.
func (*CompleteEntityWorkItemResponse) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{16}
}

// Request payload for abandoning an entity work item.
type AbandonEntityWorkItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The completion token that was provided when the work item was fetched.
	CompletionToken string `protobuf:"bytes,1,opt,name=completionToken,proto3" json:"completionToken,omitempty"`
	Reason          string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AbandonEntityWorkItemRequest) Reset() {
	*x = AbandonEntityWorkItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonEntityWorkItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonEntityWorkItemRequest) ProtoMessage() {}

func (x *AbandonEntityWorkItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonEntityWorkItemRequest.ProtoReflect.Descriptor instead.
func (*AbandonEntityWorkItemRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{17}
}

func (x *AbandonEntityWorkItemRequest) GetCompletionToken() string {
	if x != nil {
		return x.CompletionToken
	}
	return ""
}

func (x *AbandonEntityWorkItemRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Response payload for abandoning an entity work item.
type AbandonEntityWorkItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AbandonEntityWorkItemResponse) Reset() {
	*x = AbandonEntityWorkItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonEntityWorkItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonEntityWorkItemResponse) ProtoMessage() {}

func (x *AbandonEntityWorkItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonEntityWorkItemResponse.ProtoReflect.Descriptor instead.
func (*AbandonEntityWorkItemResponse) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{18}
}

// Request payload for ping operations.
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{19}
}

// Response payload for ping operations.
type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{20}
}

type WorkflowState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inbox        []*HistoryEvent         `protobuf:"bytes,1,rep,name=inbox,proto3" json:"inbox,omitempty"`
	History      []*HistoryEvent         `protobuf:"bytes,2,rep,name=history,proto3" json:"history,omitempty"`
	CustomStatus *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=customStatus,proto3" json:"customStatus,omitempty"`
	Generation   uint64                  `protobuf:"varint,4,opt,name=generation,proto3" json:"generation,omitempty"`
}

func (x *WorkflowState) Reset() {
	*x = WorkflowState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowState) ProtoMessage() {}

func (x *WorkflowState) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowState.ProtoReflect.Descriptor instead.
func (*WorkflowState) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{21}
}

func (x *WorkflowState) GetInbox() []*HistoryEvent {
	if x != nil {
		return x.Inbox
	}
	return nil
}

func (x *WorkflowState) GetHistory() []*HistoryEvent {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *WorkflowState) GetCustomStatus() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomStatus
	}
	return nil
}

func (x *WorkflowState) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

type CreateWorkflowInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEvent *HistoryEvent               `protobuf:"bytes,1,opt,name=startEvent,proto3" json:"startEvent,omitempty"`
	Policy     *OrchestrationIdReusePolicy `protobuf:"bytes,2,opt,name=policy,proto3,oneof" json:"policy,omitempty"`
}

func (x *CreateWorkflowInstanceRequest) Reset() {
	*x = CreateWorkflowInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkflowInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowInstanceRequest) ProtoMessage() {}

func (x *CreateWorkflowInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowInstanceRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowInstanceRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{22}
}

func (x *CreateWorkflowInstanceRequest) GetStartEvent() *HistoryEvent {
	if x != nil {
		return x.StartEvent
	}
	return nil
}

func (x *CreateWorkflowInstanceRequest) GetPolicy() *OrchestrationIdReusePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type OrchestrationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId       string                  `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Name             string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RuntimeStatus    OrchestrationStatus     `protobuf:"varint,3,opt,name=runtimeStatus,proto3,enum=OrchestrationStatus" json:"runtimeStatus,omitempty"`
	CreatedAt        *timestamppb.Timestamp  `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	LastUpdatedAt    *timestamppb.Timestamp  `protobuf:"bytes,5,opt,name=lastUpdatedAt,proto3" json:"lastUpdatedAt,omitempty"`
	Input            *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=input,proto3" json:"input,omitempty"`
	Output           *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=output,proto3" json:"output,omitempty"`
	CustomStatus     *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=customStatus,proto3" json:"customStatus,omitempty"`
	FailureDetails   *TaskFailureDetails     `protobuf:"bytes,9,opt,name=failureDetails,proto3" json:"failureDetails,omitempty"`
	CompletedAt      *timestamppb.Timestamp  `protobuf:"bytes,10,opt,name=completedAt,proto3" json:"completedAt,omitempty"`
	ParentInstanceId string                  `protobuf:"bytes,11,opt,name=parentInstanceId,proto3" json:"parentInstanceId,omitempty"`
}

func (x *OrchestrationMetadata) Reset() {
	*x = OrchestrationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrchestrationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestrationMetadata) ProtoMessage() {}

func (x *OrchestrationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestrationMetadata.ProtoReflect.Descriptor instead.
func (*OrchestrationMetadata) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{23}
}

func (x *OrchestrationMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *OrchestrationMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrchestrationMetadata) GetRuntimeStatus() OrchestrationStatus {
	if x != nil {
		return x.RuntimeStatus
	}
	return OrchestrationStatus_ORCHESTRATION_STATUS_RUNNING
}

func (x *OrchestrationMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OrchestrationMetadata) GetLastUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedAt
	}
	return nil
}

func (x *OrchestrationMetadata) GetInput() *wrapperspb.StringValue {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *OrchestrationMetadata) GetOutput() *wrapperspb.StringValue {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *OrchestrationMetadata) GetCustomStatus() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomStatus
	}
	return nil
}

func (x *OrchestrationMetadata) GetFailureDetails() *TaskFailureDetails {
	if x != nil {
		return x.FailureDetails
	}
	return nil
}

func (x *OrchestrationMetadata) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *OrchestrationMetadata) GetParentInstanceId() string {
	if x != nil {
		return x.ParentInstanceId
	}
	return ""
}

type WorkflowStateMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboxLength   uint64 `protobuf:"varint,1,opt,name=inboxLength,proto3" json:"inboxLength,omitempty"`
	HistoryLength uint64 `protobuf:"varint,2,opt,name=historyLength,proto3" json:"historyLength,omitempty"`
	Generation    uint64 `protobuf:"varint,3,opt,name=generation,proto3" json:"generation,omitempty"`
}

func (x *WorkflowStateMetadata) Reset() {
	*x = WorkflowStateMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowStateMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowStateMetadata) ProtoMessage() {}

func (x *WorkflowStateMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowStateMetadata.ProtoReflect.Descriptor instead.
func (*WorkflowStateMetadata) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{24}
}

func (x *WorkflowStateMetadata) GetInboxLength() uint64 {
	if x != nil {
		return x.InboxLength
	}
	return 0
}

func (x *WorkflowStateMetadata) GetHistoryLength() uint64 {
	if x != nil {
		return x.HistoryLength
	}
	return 0
}

func (x *WorkflowStateMetadata) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

type DurableTimer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimerEvent *HistoryEvent `protobuf:"bytes,1,opt,name=timerEvent,proto3" json:"timerEvent,omitempty"`
	Generation uint64        `protobuf:"varint,2,opt,name=generation,proto3" json:"generation,omitempty"`
}

func (x *DurableTimer) Reset() {
	*x = DurableTimer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DurableTimer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DurableTimer) ProtoMessage() {}

func (x *DurableTimer) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DurableTimer.ProtoReflect.Descriptor instead.
func (*DurableTimer) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{25}
}

func (x *DurableTimer) GetTimerEvent() *HistoryEvent {
	if x != nil {
		return x.TimerEvent
	}
	return nil
}

func (x *DurableTimer) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

// Request payload for fetching backend metrics.
type GetMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMetricsRequest) Reset() {
	*x = GetMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsRequest) ProtoMessage() {}

func (x *GetMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{26}
}

// Response payload for fetching backend metrics
type GetMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The current metrics for the backend service.
	Metrics *BackendMetrics `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *GetMetricsResponse) Reset() {
	*x = GetMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsResponse) ProtoMessage() {}

func (x *GetMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetMetricsResponse) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetMetricsResponse) GetMetrics() *BackendMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Metrics for the backend service.
type BackendMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Activity work item metrics
	ActivityWorkItems *WorkItemMetrics `protobuf:"bytes,1,opt,name=activityWorkItems,proto3" json:"activityWorkItems,omitempty"`
	// Orchestrator work item metrics
	OrchestratorWorkItems *WorkItemMetrics `protobuf:"bytes,2,opt,name=orchestratorWorkItems,proto3" json:"orchestratorWorkItems,omitempty"`
	// Entity work item metrics
	EntityWorkItems *WorkItemMetrics `protobuf:"bytes,3,opt,name=entityWorkItems,proto3" json:"entityWorkItems,omitempty"`
	// Metrics related to workers currently connected to the backend
	ConnectedWorkers *ConnectedWorkerMetrics `protobuf:"bytes,4,opt,name=connectedWorkers,proto3" json:"connectedWorkers,omitempty"`
}

func (x *BackendMetrics) Reset() {
	*x = BackendMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackendMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendMetrics) ProtoMessage() {}

func (x *BackendMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendMetrics.ProtoReflect.Descriptor instead.
func (*BackendMetrics) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{28}
}

func (x *BackendMetrics) GetActivityWorkItems() *WorkItemMetrics {
	if x != nil {
		return x.ActivityWorkItems
	}
	return nil
}

func (x *BackendMetrics) GetOrchestratorWorkItems() *WorkItemMetrics {
	if x != nil {
		return x.OrchestratorWorkItems
	}
	return nil
}

func (x *BackendMetrics) GetEntityWorkItems() *WorkItemMetrics {
	if x != nil {
		return x.EntityWorkItems
	}
	return nil
}

func (x *BackendMetrics) GetConnectedWorkers() *ConnectedWorkerMetrics {
	if x != nil {
		return x.ConnectedWorkers
	}
	return nil
}

// Metrics related to work items
type WorkItemMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of work items that are queued and waiting to be processed
	Pending int32 `protobuf:"varint,1,opt,name=pending,proto3" json:"pending,omitempty"`
	// Number of work items that are currently being processed
	Active int32 `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	// Age of the oldest work item in the queue, in seconds
	OldestAgeInSeconds int32 `protobuf:"varint,3,opt,name=oldestAgeInSeconds,proto3" json:"oldestAgeInSeconds,omitempty"`
}

func (x *WorkItemMetrics) Reset() {
	*x = WorkItemMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkItemMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkItemMetrics) ProtoMessage() {}

func (x *WorkItemMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkItemMetrics.ProtoReflect.Descriptor instead.
func (*WorkItemMetrics) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{29}
}

func (x *WorkItemMetrics) GetPending() int32 {
	if x != nil {
		return x.Pending
	}
	return 0
}

func (x *WorkItemMetrics) GetActive() int32 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *WorkItemMetrics) GetOldestAgeInSeconds() int32 {
	if x != nil {
		return x.OldestAgeInSeconds
	}
	return 0
}

// Metrics related to workers currently connected to the backend
type ConnectedWorkerMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of worker instances that are currently connected to the backend
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ConnectedWorkerMetrics) Reset() {
	*x = ConnectedWorkerMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedWorkerMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedWorkerMetrics) ProtoMessage() {}

func (x *ConnectedWorkerMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_backend_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedWorkerMetrics.ProtoReflect.Descriptor instead.
func (*ConnectedWorkerMetrics) Descriptor() ([]byte, []int) {
	return file_backend_service_proto_rawDescGZIP(), []int{30}
}

func (x *ConnectedWorkerMetrics) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_backend_service_proto protoreflect.FileDescriptor

var file_backend_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0x12, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x6a, 0x0a, 0x16, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a,
	0x13, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x67, 0x65, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22,
	0x76, 0x0a, 0x17, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x12, 0x43, 0x0a, 0x12, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x12, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x59, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0x4f, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x22, 0x80, 0x01, 0x0a, 0x1f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x33, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x1e, 0x41, 0x62,
	0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x21, 0x0a, 0x1f, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xac, 0x04, 0x0a, 0x24, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x08,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x3a, 0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d,
	0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a,
	0x08, 0x6e, 0x65, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x6e, 0x65, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x54, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x64, 0x75, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b,
	0x6e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x12, 0x6e,
	0x75, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x12, 0x6e, 0x75, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x22, 0x27, 0x0a, 0x25, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x6e, 0x0a, 0x13, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4f, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x4f, 0x0a, 0x23, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x4f, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x26, 0x0a, 0x24, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x4f, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7, 0x02, 0x0a, 0x1d, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x1c, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x1f, 0x0a, 0x1d, 0x41, 0x62, 0x61, 0x6e,
	0x64, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x0d, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x6e,
	0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x12,
	0x27, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x75,
	0x73, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x22, 0xd6, 0x04, 0x0a, 0x15, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x40, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x3c, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a,
	0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x15, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x0c, 0x44, 0x75,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x91, 0x03,
	0x0a, 0x0e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x12, 0x5c, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x75,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x11, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x64,
	0x0a, 0x15, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x15, 0x6f,
	0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x58, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x61,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x73, 0x22, 0x73, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74,
	0x41, 0x67, 0x65, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x41, 0x67, 0x65, 0x49, 0x6e, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2e, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xfd, 0x10, 0x0a, 0x0e, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0f, 0x57,
	0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x35,
	0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x0e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x16, 0x2e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x12, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x14, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x30, 0x01, 0x12, 0xa7, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x42, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x15,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x30, 0x01, 0x12, 0x9b, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x3e, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x17, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x3d, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57,
	0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e,
	0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xaa,
	0x01, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x43, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa7, 0x01, 0x0a, 0x1c,
	0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x42, 0x2e, 0x64,
	0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x61,
	0x6e, 0x64, 0x6f, 0x6e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x43, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x3c, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57,
	0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d,
	0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x92, 0x01,
	0x0a, 0x15, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57,
	0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61,
	0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x2e, 0x64, 0x75, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x12, 0x30, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x56, 0x0a, 0x2b, 0x69, 0x6f, 0x2e, 0x64, 0x61, 0x70,
	0x72, 0x2e, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x5a, 0x0b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0xaa, 0x02, 0x19, 0x44, 0x61, 0x70, 0x72, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_backend_service_proto_rawDescOnce sync.Once
	file_backend_service_proto_rawDescData = file_backend_service_proto_rawDesc
)

func file_backend_service_proto_rawDescGZIP() []byte {
	file_backend_service_proto_rawDescOnce.Do(func() {
		file_backend_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_service_proto_rawDescData)
	})
	return file_backend_service_proto_rawDescData
}

var file_backend_service_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_backend_service_proto_goTypes = []interface{}{
	(*AddEventRequest)(nil),                       // 0: durabletask.protos.backend.v1.AddEventRequest
	(*AddEventResponse)(nil),                      // 1: durabletask.protos.backend.v1.AddEventResponse
	(*WaitForInstanceRequest)(nil),                // 2: durabletask.protos.backend.v1.WaitForInstanceRequest
	(*WaitForInstanceResponse)(nil),               // 3: durabletask.protos.backend.v1.WaitForInstanceResponse
	(*GetOrchestrationRuntimeStateRequest)(nil),   // 4: durabletask.protos.backend.v1.GetOrchestrationRuntimeStateRequest
	(*GetOrchestrationRuntimeStateResponse)(nil),  // 5: durabletask.protos.backend.v1.GetOrchestrationRuntimeStateResponse
	(*CompleteActivityWorkItemRequest)(nil),       // 6: durabletask.protos.backend.v1.CompleteActivityWorkItemRequest
	(*CompleteActivityWorkItemResponse)(nil),      // 7: durabletask.protos.backend.v1.CompleteActivityWorkItemResponse
	(*AbandonActivityWorkItemRequest)(nil),        // 8: durabletask.protos.backend.v1.AbandonActivityWorkItemRequest
	(*AbandonActivityWorkItemResponse)(nil),       // 9: durabletask.protos.backend.v1.AbandonActivityWorkItemResponse
	(*CompleteOrchestrationWorkItemRequest)(nil),  // 10: durabletask.protos.backend.v1.CompleteOrchestrationWorkItemRequest
	(*CompleteOrchestrationWorkItemResponse)(nil), // 11: durabletask.protos.backend.v1.CompleteOrchestrationWorkItemResponse
	(*OrchestratorMessage)(nil),                   // 12: durabletask.protos.backend.v1.OrchestratorMessage
	(*AbandonOrchestrationWorkItemRequest)(nil),   // 13: durabletask.protos.backend.v1.AbandonOrchestrationWorkItemRequest
	(*AbandonOrchestrationWorkItemResponse)(nil),  // 14: durabletask.protos.backend.v1.AbandonOrchestrationWorkItemResponse
	(*CompleteEntityWorkItemRequest)(nil),         // 15: durabletask.protos.backend.v1.CompleteEntityWorkItemRequest
	(*CompleteEntityWorkItemResponse)(nil),        // 16: durabletask.protos.backend.v1.CompleteEntityWorkItemResponse
	(*AbandonEntityWorkItemRequest)(nil),          // 17: durabletask.protos.backend.v1.AbandonEntityWorkItemRequest
	(*AbandonEntityWorkItemResponse)(nil),         // 18: durabletask.protos.backend.v1.AbandonEntityWorkItemResponse
	(*PingRequest)(nil),                           // 19: durabletask.protos.backend.v1.PingRequest
	(*PingResponse)(nil),                          // 20: durabletask.protos.backend.v1.PingResponse
	(*WorkflowState)(nil),                         // 21: durabletask.protos.backend.v1.WorkflowState
	(*CreateWorkflowInstanceRequest)(nil),         // 22: durabletask.protos.backend.v1.CreateWorkflowInstanceRequest
	(*OrchestrationMetadata)(nil),                 // 23: durabletask.protos.backend.v1.OrchestrationMetadata
	(*WorkflowStateMetadata)(nil),                 // 24: durabletask.protos.backend.v1.WorkflowStateMetadata
	(*DurableTimer)(nil),                          // 25: durabletask.protos.backend.v1.DurableTimer
	(*GetMetricsRequest)(nil),                     // 26: durabletask.protos.backend.v1.GetMetricsRequest
	(*GetMetricsResponse)(nil),                    // 27: durabletask.protos.backend.v1.GetMetricsResponse
	(*BackendMetrics)(nil),                        // 28: durabletask.protos.backend.v1.BackendMetrics
	(*WorkItemMetrics)(nil),                       // 29: durabletask.protos.backend.v1.WorkItemMetrics
	(*ConnectedWorkerMetrics)(nil),                // 30: durabletask.protos.backend.v1.ConnectedWorkerMetrics
	(*OrchestrationInstance)(nil),                 // 31: OrchestrationInstance
	(*HistoryEvent)(nil),                          // 32: HistoryEvent
	(*OrchestrationState)(nil),                    // 33: OrchestrationState
	(OrchestrationStatus)(0),                      // 34: OrchestrationStatus
	(*wrapperspb.StringValue)(nil),                // 35: google.protobuf.StringValue
	(*wrapperspb.Int32Value)(nil),                 // 36: google.protobuf.Int32Value
	(*OrchestrationIdReusePolicy)(nil),            // 37: OrchestrationIdReusePolicy
	(*timestamppb.Timestamp)(nil),                 // 38: google.protobuf.Timestamp
	(*TaskFailureDetails)(nil),                    // 39: TaskFailureDetails
	(*CreateInstanceRequest)(nil),                 // 40: CreateInstanceRequest
	(*GetInstanceRequest)(nil),                    // 41: GetInstanceRequest
	(*GetEntityRequest)(nil),                      // 42: GetEntityRequest
	(*QueryInstancesRequest)(nil),                 // 43: QueryInstancesRequest
	(*QueryEntitiesRequest)(nil),                  // 44: QueryEntitiesRequest
	(*PurgeInstancesRequest)(nil),                 // 45: PurgeInstancesRequest
	(*CleanEntityStorageRequest)(nil),             // 46: CleanEntityStorageRequest
	(*GetWorkItemsRequest)(nil),                   // 47: GetWorkItemsRequest
	(*StreamInstanceHistoryRequest)(nil),          // 48: StreamInstanceHistoryRequest
	(*CreateInstanceResponse)(nil),                // 49: CreateInstanceResponse
	(*GetInstanceResponse)(nil),                   // 50: GetInstanceResponse
	(*GetEntityResponse)(nil),                     // 51: GetEntityResponse
	(*QueryInstancesResponse)(nil),                // 52: QueryInstancesResponse
	(*QueryEntitiesResponse)(nil),                 // 53: QueryEntitiesResponse
	(*PurgeInstancesResponse)(nil),                // 54: PurgeInstancesResponse
	(*CleanEntityStorageResponse)(nil),            // 55: CleanEntityStorageResponse
	(*WorkItem)(nil),                              // 56: WorkItem
	(*HistoryChunk)(nil),                          // 57: HistoryChunk
}
var file_backend_service_proto_depIdxs = []int32{
	31, // 0: durabletask.protos.backend.v1.AddEventRequest.instance:type_name -> OrchestrationInstance
	32, // 1: durabletask.protos.backend.v1.AddEventRequest.event:type_name -> HistoryEvent
	33, // 2: durabletask.protos.backend.v1.WaitForInstanceResponse.orchestrationState:type_name -> OrchestrationState
	31, // 3: durabletask.protos.backend.v1.GetOrchestrationRuntimeStateRequest.instance:type_name -> OrchestrationInstance
	32, // 4: durabletask.protos.backend.v1.GetOrchestrationRuntimeStateResponse.history:type_name -> HistoryEvent
	32, // 5: durabletask.protos.backend.v1.CompleteActivityWorkItemRequest.responseEvent:type_name -> HistoryEvent
	31, // 6: durabletask.protos.backend.v1.CompleteOrchestrationWorkItemRequest.instance:type_name -> OrchestrationInstance
	34, // 7: durabletask.protos.backend.v1.CompleteOrchestrationWorkItemRequest.runtimeStatus:type_name -> OrchestrationStatus
	35, // 8: durabletask.protos.backend.v1.CompleteOrchestrationWorkItemRequest.customStatus:type_name -> google.protobuf.StringValue
	32, // 9: durabletask.protos.backend.v1.CompleteOrchestrationWorkItemRequest.newHistory:type_name -> HistoryEvent
	32, // 10: durabletask.protos.backend.v1.CompleteOrchestrationWorkItemRequest.newTasks:type_name -> HistoryEvent
	32, // 11: durabletask.protos.backend.v1.CompleteOrchestrationWorkItemRequest.newTimers:type_name -> HistoryEvent
	12, // 12: durabletask.protos.backend.v1.CompleteOrchestrationWorkItemRequest.newMessages:type_name -> durabletask.protos.backend.v1.OrchestratorMessage
	36, // 13: durabletask.protos.backend.v1.CompleteOrchestrationWorkItemRequest.numEventsProcessed:type_name -> google.protobuf.Int32Value
	31, // 14: durabletask.protos.backend.v1.OrchestratorMessage.instance:type_name -> OrchestrationInstance
	32, // 15: durabletask.protos.backend.v1.OrchestratorMessage.event:type_name -> HistoryEvent
	35, // 16: durabletask.protos.backend.v1.CompleteEntityWorkItemRequest.entityState:type_name -> google.protobuf.StringValue
	12, // 17: durabletask.protos.backend.v1.CompleteEntityWorkItemRequest.messages:type_name -> durabletask.protos.backend.v1.OrchestratorMessage
	32, // 18: durabletask.protos.backend.v1.WorkflowState.inbox:type_name -> HistoryEvent
	32, // 19: durabletask.protos.backend.v1.WorkflowState.history:type_name -> HistoryEvent
	35, // 20: durabletask.protos.backend.v1.WorkflowState.customStatus:type_name -> google.protobuf.StringValue
	32, // 21: durabletask.protos.backend.v1.CreateWorkflowInstanceRequest.startEvent:type_name -> HistoryEvent
	37, // 22: durabletask.protos.backend.v1.CreateWorkflowInstanceRequest.policy:type_name -> OrchestrationIdReusePolicy
	34, // 23: durabletask.protos.backend.v1.OrchestrationMetadata.runtimeStatus:type_name -> OrchestrationStatus
	38, // 24: durabletask.protos.backend.v1.OrchestrationMetadata.createdAt:type_name -> google.protobuf.Timestamp
	38, // 25: durabletask.protos.backend.v1.OrchestrationMetadata.lastUpdatedAt:type_name -> google.protobuf.Timestamp
	35, // 26: durabletask.protos.backend.v1.OrchestrationMetadata.input:type_name -> google.protobuf.StringValue
	35, // 27: durabletask.protos.backend.v1.OrchestrationMetadata.output:type_name -> google.protobuf.StringValue
	35, // 28: durabletask.protos.backend.v1.OrchestrationMetadata.customStatus:type_name -> google.protobuf.StringValue
	39, // 29: durabletask.protos.backend.v1.OrchestrationMetadata.failureDetails:type_name -> TaskFailureDetails
	38, // 30: durabletask.protos.backend.v1.OrchestrationMetadata.completedAt:type_name -> google.protobuf.Timestamp
	32, // 31: durabletask.protos.backend.v1.DurableTimer.timerEvent:type_name -> HistoryEvent
	28, // 32: durabletask.protos.backend.v1.GetMetricsResponse.metrics:type_name -> durabletask.protos.backend.v1.BackendMetrics
	29, // 33: durabletask.protos.backend.v1.BackendMetrics.activityWorkItems:type_name -> durabletask.protos.backend.v1.WorkItemMetrics
	29, // 34: durabletask.protos.backend.v1.BackendMetrics.orchestratorWorkItems:type_name -> durabletask.protos.backend.v1.WorkItemMetrics
	29, // 35: durabletask.protos.backend.v1.BackendMetrics.entityWorkItems:type_name -> durabletask.protos.backend.v1.WorkItemMetrics
	30, // 36: durabletask.protos.backend.v1.BackendMetrics.connectedWorkers:type_name -> durabletask.protos.backend.v1.ConnectedWorkerMetrics
	40, // 37: durabletask.protos.backend.v1.BackendService.CreateInstance:input_type -> CreateInstanceRequest
	0,  // 38: durabletask.protos.backend.v1.BackendService.AddEvent:input_type -> durabletask.protos.backend.v1.AddEventRequest
	41, // 39: durabletask.protos.backend.v1.BackendService.GetInstance:input_type -> GetInstanceRequest
	42, // 40: durabletask.protos.backend.v1.BackendService.GetEntity:input_type -> GetEntityRequest
	43, // 41: durabletask.protos.backend.v1.BackendService.QueryInstances:input_type -> QueryInstancesRequest
	44, // 42: durabletask.protos.backend.v1.BackendService.QueryEntities:input_type -> QueryEntitiesRequest
	2,  // 43: durabletask.protos.backend.v1.BackendService.WaitForInstance:input_type -> durabletask.protos.backend.v1.WaitForInstanceRequest
	45, // 44: durabletask.protos.backend.v1.BackendService.PurgeInstances:input_type -> PurgeInstancesRequest
	46, // 45: durabletask.protos.backend.v1.BackendService.CleanEntityStorage:input_type -> CleanEntityStorageRequest
	47, // 46: durabletask.protos.backend.v1.BackendService.GetWorkItems:input_type -> GetWorkItemsRequest
	4,  // 47: durabletask.protos.backend.v1.BackendService.GetOrchestrationRuntimeState:input_type -> durabletask.protos.backend.v1.GetOrchestrationRuntimeStateRequest
	48, // 48: durabletask.protos.backend.v1.BackendService.StreamInstanceHistory:input_type -> StreamInstanceHistoryRequest
	6,  // 49: durabletask.protos.backend.v1.BackendService.CompleteActivityWorkItem:input_type -> durabletask.protos.backend.v1.CompleteActivityWorkItemRequest
	8,  // 50: durabletask.protos.backend.v1.BackendService.AbandonActivityWorkItem:input_type -> durabletask.protos.backend.v1.AbandonActivityWorkItemRequest
	10, // 51: durabletask.protos.backend.v1.BackendService.CompleteOrchestrationWorkItem:input_type -> durabletask.protos.backend.v1.CompleteOrchestrationWorkItemRequest
	13, // 52: durabletask.protos.backend.v1.BackendService.AbandonOrchestrationWorkItem:input_type -> durabletask.protos.backend.v1.AbandonOrchestrationWorkItemRequest
	15, // 53: durabletask.protos.backend.v1.BackendService.CompleteEntityWorkItem:input_type -> durabletask.protos.backend.v1.CompleteEntityWorkItemRequest
	17, // 54: durabletask.protos.backend.v1.BackendService.AbandonEntityWorkItem:input_type -> durabletask.protos.backend.v1.AbandonEntityWorkItemRequest
	19, // 55: durabletask.protos.backend.v1.BackendService.Ping:input_type -> durabletask.protos.backend.v1.PingRequest
	26, // 56: durabletask.protos.backend.v1.BackendService.GetMetrics:input_type -> durabletask.protos.backend.v1.GetMetricsRequest
	49, // 57: durabletask.protos.backend.v1.BackendService.CreateInstance:output_type -> CreateInstanceResponse
	1,  // 58: durabletask.protos.backend.v1.BackendService.AddEvent:output_type -> durabletask.protos.backend.v1.AddEventResponse
	50, // 59: durabletask.protos.backend.v1.BackendService.GetInstance:output_type -> GetInstanceResponse
	51, // 60: durabletask.protos.backend.v1.BackendService.GetEntity:output_type -> GetEntityResponse
	52, // 61: durabletask.protos.backend.v1.BackendService.QueryInstances:output_type -> QueryInstancesResponse
	53, // 62: durabletask.protos.backend.v1.BackendService.QueryEntities:output_type -> QueryEntitiesResponse
	3,  // 63: durabletask.protos.backend.v1.BackendService.WaitForInstance:output_type -> durabletask.protos.backend.v1.WaitForInstanceResponse
	54, // 64: durabletask.protos.backend.v1.BackendService.PurgeInstances:output_type -> PurgeInstancesResponse
	55, // 65: durabletask.protos.backend.v1.BackendService.CleanEntityStorage:output_type -> CleanEntityStorageResponse
	56, // 66: durabletask.protos.backend.v1.BackendService.GetWorkItems:output_type -> WorkItem
	5,  // 67: durabletask.protos.backend.v1.BackendService.GetOrchestrationRuntimeState:output_type -> durabletask.protos.backend.v1.GetOrchestrationRuntimeStateResponse
	57, // 68: durabletask.protos.backend.v1.BackendService.StreamInstanceHistory:output_type -> HistoryChunk
	7,  // 69: durabletask.protos.backend.v1.BackendService.CompleteActivityWorkItem:output_type -> durabletask.protos.backend.v1.CompleteActivityWorkItemResponse
	9,  // 70: durabletask.protos.backend.v1.BackendService.AbandonActivityWorkItem:output_type -> durabletask.protos.backend.v1.AbandonActivityWorkItemResponse
	11, // 71: durabletask.protos.backend.v1.BackendService.CompleteOrchestrationWorkItem:output_type -> durabletask.protos.backend.v1.CompleteOrchestrationWorkItemResponse
	14, // 72: durabletask.protos.backend.v1.BackendService.AbandonOrchestrationWorkItem:output_type -> durabletask.protos.backend.v1.AbandonOrchestrationWorkItemResponse
	16, // 73: durabletask.protos.backend.v1.BackendService.CompleteEntityWorkItem:output_type -> durabletask.protos.backend.v1.CompleteEntityWorkItemResponse
	18, // 74: durabletask.protos.backend.v1.BackendService.AbandonEntityWorkItem:output_type -> durabletask.protos.backend.v1.AbandonEntityWorkItemResponse
	20, // 75: durabletask.protos.backend.v1.BackendService.Ping:output_type -> durabletask.protos.backend.v1.PingResponse
	27, // 76: durabletask.protos.backend.v1.BackendService.GetMetrics:output_type -> durabletask.protos.backend.v1.GetMetricsResponse
	57, // [57:77] is the sub-list for method output_type
	37, // [37:57] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_backend_service_proto_init() }
func file_backend_service_proto_init() {
	if File_backend_service_proto != nil {
		return
	}
	file_orchestrator_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_backend_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrchestrationRuntimeStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrchestrationRuntimeStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteActivityWorkItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteActivityWorkItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonActivityWorkItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonActivityWorkItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteOrchestrationWorkItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteOrchestrationWorkItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrchestratorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonOrchestrationWorkItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonOrchestrationWorkItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteEntityWorkItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteEntityWorkItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonEntityWorkItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonEntityWorkItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkflowInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrchestrationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowStateMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DurableTimer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackendMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkItemMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedWorkerMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_backend_service_proto_msgTypes[22].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_service_proto_goTypes,
		DependencyIndexes: file_backend_service_proto_depIdxs,
		MessageInfos:      file_backend_service_proto_msgTypes,
	}.Build()
	File_backend_service_proto = out.File
	file_backend_service_proto_rawDesc = nil
	file_backend_service_proto_goTypes = nil
	file_backend_service_proto_depIdxs = nil
}
